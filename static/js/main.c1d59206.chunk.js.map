{"version":3,"sources":["Nav.jsx","Home.jsx","HowItWorks.jsx","Timer.jsx","QuizPage.jsx","Question.jsx","CreateQuiz.jsx","LeaderBoard.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Nav","react_default","a","createElement","react_router_dom","to","className","Home","document","title","HowItWorks","Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","timer","setInterval","minutes","String","Math","floor","state","total","padStart","seconds","setState","min","sec","clearInterval","timeOver","done","Number","submitted","_this$state","Component","QuizPage","_ref","match","fetchQuestions","e","preventDefault","fetch","concat","quizId","then","res","json","data","quiz","starting","modalHidden","user","value","submitAnswers","saveAndNext","disableButton","answers","_id","method","headers","Accept","Content-Type","body","JSON","stringify","takenBy","result","score","max","maxScore","percent","saveAnswer","selectedAnswer","target","name","querySelectorAll","forEach","button","style","backgroundColor","push","questions","currrentQuestion","displayModal","popup","display","params","quizCreator","_this2","_data$quizDetails","quizDetails","created","duration","creator","_this3","_this$state$quiz","creatorName","Date","toDateString","onClick","ref","elem","onSubmit","required","minLength","type","placeholder","src_Timer","length","id","options","disabled","toFixed","href","rel","Question","number","htmlFor","CreateQuiz","saveDetails","getElementById","durationMinutes","durationSeconds","noOfQuestions","creatorEmail","quizName","email","status","saveQuestions","asyncToGenerator","regenerator_default","mark","_callee","allQuestions","allAnswers","i","optionA","optionB","optionC","optionD","singleQuestion","_i","wrap","_context","prev","next","sending","getElementsByClassName","sent","children","window","confirm","submitQuiz","stop","_x","apply","arguments","_callee2","response","_context2","expires","Array","from","item","src_Question","key","LeaderBoard","sort","b","map","React","NavRoute","exact","path","component","react_router","render","src_Nav","App","App_NavRoute","Boolean","location","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1d59206.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n  return (\r\n   <nav>\r\n       <ul>\r\n           <Link to='/'>\r\n            <li>Home</li>\r\n           </Link>\r\n           <span className=\"right\">\r\n             <Link to='/howitworks'>\r\n              <li>How It Works</li>\r\n            </Link>\r\n            <Link to='/createquiz'>\r\n              <li>Create Quiz</li>\r\n            </Link>\r\n           </span>\r\n       </ul>\r\n   </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nfunction Home() {\r\n  document.title = 'Quizza';\r\n  return (\r\n    <div>\r\n      <h3> Home </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction HowItWorks() {\r\n  document.title = `How It Works | Quizza`;\r\n  return (\r\n    <div>\r\n      <h3> How It Works </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HowItWorks;\r\n","import React, {Component} from 'react';\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n      super()\r\n      this.props = props\r\n      this.state = {\r\n        min : null,\r\n        sec : null,\r\n        total : 0,\r\n        done : false\r\n      }\r\n    }\r\n\r\n  componentDidMount() {\r\n    var total = (this.props.min * 60 ) + Number(this.props.sec);\r\n    this.setState({total : total});\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.submitted){\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  timer = setInterval(()  => {\r\n    //calculations for minutes and seconds\r\n    var minutes = String(Math.floor((this.state.total % (60 * 60)) / 60)).padStart(2, 0);\r\n    var seconds = String(Math.floor((this.state.total % (60)))).padStart(2, 0);\r\n    \r\n    this.setState({\r\n      min : minutes, sec : seconds\r\n    }); \r\n    this.setState({total : this.state.total - 1});\r\n    // If the count down is over, auto submit\r\n    if (this.state.total < 0) {\r\n      clearInterval(this.timer);\r\n      this.props.timeOver();\r\n    }\r\n  }, 1000);\r\n\r\n  render() {\r\n    const {min, sec, total} = this.state;\r\n    return (\r\n      <div className={'countdown ' + (total < 30 ? 'red' : '' ) }>{min ? min + ':' + sec : 'Ready'}</div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Timer;","import React, {Component} from 'react';\r\nimport Timer from './Timer';\r\n\r\nclass QuizPage extends Component {\r\n    constructor({match}){\r\n        super()\r\n        this.state = {\r\n            quizId : match.params.quizId,\r\n            quiz : null,\r\n            quizCreator : null,\r\n            starting : false,\r\n            user : '',\r\n            result : null,\r\n            currrentQuestion : 1,\r\n            selectedAnswer : null,\r\n            answers : [],\r\n            submitted : false,\r\n            disableButton :  false\r\n        }\r\n    }\r\n   \r\n    componentDidMount() {\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/quiz/${this.state.quizId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            const { created, name, duration,  creator } = data.quizDetails;\r\n            this.setState({\r\n                quiz : {created, name, duration},\r\n                quizCreator : creator\r\n            })\r\n            document.title = `${name} | Quizza`;\r\n        })\r\n    }\r\n    \r\n    fetchQuestions = (e) => {\r\n        e.preventDefault()\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/quiz/${this.state.quizId}/take`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                quiz : data.quiz,\r\n                starting: true,\r\n                modalHidden : true,\r\n                user : this.user.value\r\n            })\r\n        })\r\n    }\r\n\r\n    submitAnswers = () => {\r\n        this.saveAndNext();\r\n        this.setState({disableButton : true, submitted : true});\r\n        let answers = this.state.answers;\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/submit/${this.state.quiz._id}`, {\r\n            method : 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({answers, takenBy : this.state.user}),\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n                this.setState({\r\n                    starting : false,\r\n                    result : {\r\n                        score : data.result.score,\r\n                        max : data.maxScore,\r\n                        percent : (data.result.score/data.maxScore) * 100\r\n                    }\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n   saveAnswer = (e) => {\r\n        this.setState({selectedAnswer : e.target.name});\r\n        let buttons = document.querySelectorAll('.btn-answers');\r\n        buttons.forEach(button => {\r\n            if(button.name === e.target.name) button.style.backgroundColor = 'green'\r\n            else button.style.backgroundColor = '#ddd';\r\n        })\r\n   }\r\n\r\n   saveAndNext = () => {\r\n       this.setState({disableButton : true});\r\n        this.state.answers.push(this.state.selectedAnswer);\r\n        if(this.state.quiz.questions[this.state.currrentQuestion]){\r\n            this.setState({selectedAnswer : null, currrentQuestion : this.state.currrentQuestion + 1, disableButton : false});\r\n            document.querySelectorAll('.btn-answers').forEach(button => button.style.backgroundColor = '#ddd');\r\n        }\r\n   }\r\n\r\n    displayModal = () => {\r\n        this.popup.style.display = \"block\";\r\n    }\r\n\r\n    render(){\r\n        if(this.state.quiz) {\r\n            const {user, result} = this.state;\r\n            const {name, duration, created} = this.state.quiz;\r\n            const { name : creatorName } = this.state.quizCreator;\r\n            if (!this.state.starting && !this.state.result) {\r\n                return (\r\n                    <div>\r\n                        <h1>{name}</h1>\r\n                        <p>Created by {creatorName}</p>\r\n                        <h2>Duration : {`${duration.min} minutes : ${duration.sec} seconds`}</h2>\r\n                        <h3>Created : {new Date(created).toDateString()}</h3>\r\n                        <div>\r\n                            <button onClick = {this.displayModal}>TAKE QUIZ</button>\r\n                        </div>  \r\n                        <div ref = {elem => this.popup = elem} className=\"popup\">\r\n                            <form onSubmit= {this.fetchQuestions}>\r\n                                <input required ref={elem => this.user = elem} minLength=\"3\" type=\"text\" placeholder=\"Enter Name\"/>\r\n                                <button type=\"submit\" >START</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            if(this.state.starting) {\r\n                return (\r\n                    <div className=\"quiz\">\r\n                        <Timer timeOver = {this.submitAnswers} min = {this.state.quiz.duration.min} sec = {this.state.quiz.duration.sec} submitted={this.state.submitted}/>\r\n                        <div className=\"activeQuestion\">Question {this.state.currrentQuestion} of {this.state.quiz.questions.length}</div>\r\n                        <div className=\"questionDisplay\">\r\n                            <div>{this.state.quiz.questions[this.state.currrentQuestion - 1].title }</div>\r\n                        </div>\r\n                        <div className=\"option-row\">\r\n                            <div className=\"option\">\r\n                                <button className='btn-answers' onClick={this.saveAnswer} id=\"optionA\" name=\"A\">\r\n                                {this.state.quiz.questions[this.state.currrentQuestion - 1].options[0]}\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                <button className='btn-answers' onClick={this.saveAnswer} id=\"optionB\" name=\"B\">\r\n                                {this.state.quiz.questions[this.state.currrentQuestion - 1].options[1]}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"option-row\">\r\n                            <div className=\"option\">\r\n                                <button className='btn-answers' onClick={this.saveAnswer} id=\"optionC\" name=\"C\">\r\n                                {this.state.quiz.questions[this.state.currrentQuestion - 1].options[2]}\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                <button className='btn-answers' onClick={this.saveAnswer} id=\"optionD\" name=\"D\">\r\n                                {this.state.quiz.questions[this.state.currrentQuestion - 1].options[3]}\r\n                                </button>\r\n                            </div>  \r\n                        </div>\r\n                        {this.state.quiz.questions[this.state.currrentQuestion] ? <button disabled={this.state.disableButton}  className=\"btn-quiz\" onClick = {this.saveAndNext}>NEXT</button> : <button disabled={this.state.disableButton} className=\"btn-quiz\" onClick = {this.submitAnswers}> FINISH QUIZ</button> }\r\n                        <form></form>\r\n                    </div>\r\n                )\r\n            }\r\n            if(this.state.result) {\r\n                return (\r\n                    <div>\r\n                        <p>{`${user}, your score is ${result.percent.toFixed(1)}%`}</p>\r\n                        <p>{`You got ${result.score} questions correctly out of ${result.max}.`}</p>\r\n                        <p>See the quiz leaderboard and see where you rank amongst all who have taken quiz <a href={`https://quizza.live/#/${this.state.quizId}/leaderboard`} target=\"_blank\" rel=\"noopener noreferrer\">LEADERBOARD</a></p>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return <div></div>\r\n    }\r\n}\r\n\r\nexport default QuizPage;","import React from 'react';\r\n\r\nconst Question = ({number}) => {\r\n    return(\r\n        <div className=\"question\">\r\n            <p>Question {number}</p>\r\n            <textarea required className=\"question-input\" placeholder=\"Question\"></textarea>\r\n            <div className=\"option-row\">\r\n                <div className=\"option\">\r\n                    <textarea required placeholder=\"OPTION A\"></textarea>\r\n                </div>\r\n                <div className=\"option\">\r\n                    <textarea required placeholder=\"OPTION B\"></textarea>\r\n                </div>\r\n            </div>\r\n            <div className=\"option-row\">\r\n                <div className=\"option\">\r\n                    <textarea required placeholder=\"OPTION C\"></textarea>\r\n                </div>\r\n                <div className=\"option\">\r\n                    <textarea required placeholder=\"OPTION D\"></textarea>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"answer\">Choose correct answer</label>\r\n                <select id=\"answer\" className='answers'>\r\n                    <option disabled>Choose Answer</option>\r\n                    <option value=\"A\">Option A</option>\r\n                    <option value=\"B\">Option B</option>\r\n                    <option value=\"C\">Option C</option>\r\n                    <option value=\"D\">Option D</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;\r\n","import React, {Component} from 'react';\r\nimport Question from './Question';\r\n\r\n\r\nclass CreateQuiz extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            questions : [],\r\n            answers : [],\r\n            creator : null,\r\n            duration : null,\r\n            expires : null,\r\n            noOfQuestions : 3,\r\n            status : 'fillingDetails',\r\n            quizId : '',\r\n            sending : false\r\n        }\r\n\r\n    }\r\n    saveDetails = (e) => {\r\n        e.preventDefault();\r\n        const creatorName = document.getElementById('name').value;\r\n        const durationMinutes = document.getElementById('duration-minutes').value;\r\n        const durationSeconds = document.getElementById('duration-seconds').value;\r\n        const noOfQuestions = document.getElementById('qnos').value;\r\n        const duration = {\r\n            min : durationMinutes,\r\n            sec : durationSeconds\r\n        }\r\n        const creatorEmail = document.getElementById('email').value;\r\n        const quizName = document.getElementById('qname').value;\r\n        const creator = {\r\n            name : creatorName,\r\n            email : creatorEmail\r\n        }\r\n        this.setState({\r\n            name : quizName,\r\n            creator : creator,\r\n            duration : duration,\r\n            noOfQuestions : noOfQuestions,\r\n            status : 'fillingQuiz'\r\n        });\r\n    }\r\n    saveQuestions = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({sending : true});\r\n        let questions = await document.getElementsByClassName('question');\r\n        let answers = await document.querySelectorAll('select');\r\n        let allQuestions = [];\r\n        let allAnswers = [];\r\n        for(let i = 0; i < questions.length; i++){\r\n            let title = questions[i].children[1].value;\r\n            let optionA = questions[i].children[2].children[0].children[0].value;\r\n            let optionB = questions[i].children[2].children[1].children[0].value;\r\n            let optionC = questions[i].children[3].children[0].children[0].value;\r\n            let optionD = questions[i].children[3].children[1].children[0].value;\r\n            let options =[optionA, optionB, optionC, optionD];\r\n            let singleQuestion = {title : title, options : options};\r\n            allQuestions.push(singleQuestion);\r\n        }\r\n        for(let i = 0; i < answers.length; i++) {\r\n            allAnswers.push(answers[i].value);\r\n        }\r\n        this.setState({\r\n            questions : allQuestions,\r\n            answers : allAnswers\r\n        });\r\n        if(window.confirm(`Are you sure you want to submit ? `)) {\r\n            this.submitQuiz();\r\n        }\r\n    }\r\n\r\n    submitQuiz = async () => {\r\n        const response = await fetch('https://lalaquiz.herokuapp.com/api/v1/newquiz', {\r\n            method : 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state),\r\n        });\r\n        const res = await response.json();\r\n        this.setState({quizId : res.quizId, status : 'completed'})\r\n    }\r\n    componentDidMount() {\r\n        document.title = `Create Quiz | Quizza`;\r\n    }\r\n\r\n    render() {\r\n        if(this.state.status === 'fillingDetails') {\r\n            return (\r\n                <div>\r\n                    <form onSubmit={this.saveDetails}>\r\n                        <div>\r\n                            <label>Name : </label> <input required id=\"name\" type=\"text\"/>\r\n                        </div>\r\n                        <div>\r\n                            <label>Email Address : </label> <input required id=\"email\" type=\"email\" />\r\n                        </div>\r\n                        <div>\r\n                            <label>Duration : </label> <input required id=\"duration-minutes\" type=\"number\" max=\"60\" placeholder=\"MM\"/> :\r\n                            <input required id=\"duration-seconds\" type=\"number\" max=\"59\" placeholder=\"SS\"/>\r\n                        </div>\r\n                        <div>\r\n                            <label>QUIZ NAME :</label> <input required id=\"qname\" type=\"text\" />\r\n                        </div>\r\n                        <div>\r\n                            <label>NUMBER OF QUESTIONS :</label> <input required id=\"qnos\" type=\"number\" min='5' />\r\n                        </div>\r\n                        <button disabled={this.state.sending}>CONTINUE</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else if(this.state.status === \"fillingQuiz\"){\r\n            return(\r\n                <div>\r\n                    <form onSubmit={this.saveQuestions}>\r\n                        <div id=\"questions\">\r\n                            {\r\n                                Array.from({length : this.state.noOfQuestions}, (item, i) => {\r\n                                    return <Question key={i} number = {i + 1} />;\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <button disabled={this.state.sending} type=\"submit\" >SUBMIT QUIZ</button>\r\n                    </form>\r\n                </div>\r\n            );\r\n    } else if(this.state.status === 'completed')\r\n    return (\r\n        <div>\r\n           <p>Quiz created successfully</p> \r\n           <p>Link to take quiz is <a href={`https://quizza.live/#/${this.state.quizId}`}>{`https://quizza.live/#/${this.state.quizId}`}</a></p>\r\n           <p>Live leaderboard can be seen here : <a href={`https://quizza.live/#/${this.state.quizId}/leaderboard`}>{`https://quizza.live/#/${this.state.quizId}/leaderboard`}</a> </p>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default CreateQuiz;","import React from 'react'\r\n\r\nclass LeaderBoard extends React.Component {\r\n    constructor({match}){\r\n        super()\r\n        this.state = {\r\n            quizId : match.params.quizId,\r\n            quiz : null,\r\n            quizCreator : null,\r\n        }\r\n    }\r\n   \r\n    componentDidMount() {\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/quiz/${this.state.quizId}/leaderboard`)\r\n        .then(res => res.json())\r\n        .then(quiz => {\r\n            const { name, takenBy, created, creator} = quiz;\r\n            this.setState({\r\n                quiz : {name, takenBy, created},\r\n                quizCreator : creator\r\n            })\r\n            document.title = `${name} Leaderboard | Quizza`;\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        if(this.state.quiz) {\r\n          const {takenBy, name, created} = this.state.quiz;\r\n          const {name : creatorName} =   this.state.quizCreator;\r\n          return (\r\n            <div>\r\n                <h3>{name}</h3>\r\n                <h4>Created by {creatorName} on {new Date(created).toDateString()}</h4>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                           <td>Name</td>\r\n                            <td>Score</td> \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        takenBy\r\n                        .sort((a,b) => Number(b.score) - Number(a.score))\r\n                        .map(user => \r\n                            (<tr key={user._id}>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.score}</td>\r\n                            </tr>))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Quiz Not Found </h3>\r\n                <p>This quiz might have expired</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeaderBoard;","import React from 'react';\r\nimport  { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Nav from './Nav';\r\nimport Home from './Home';\r\nimport HowItWorks from './HowItWorks';\r\nimport QuizPage from './QuizPage';\r\nimport CreateQuiz from './CreateQuiz';\r\nimport LeaderBoard from './LeaderBoard';\r\nimport './App.css';\r\n\r\n\r\nconst NavRoute = ({exact, path, component: Component}) => (\r\n  <Route exact={exact} path={path} render={(props) => (\r\n    <div>\r\n      <Nav />\r\n      <Component {...props}/>\r\n    </div>\r\n  )}/>\r\n)\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n            <NavRoute exact path='/' component={Home} />\r\n            <NavRoute path='/howitworks' component={HowItWorks} />\r\n            <NavRoute path='/createquiz' component={CreateQuiz} />\r\n            <Route exact path='/:quizId' component={QuizPage} />\r\n            <NavRoute path='/:quizId/leaderboard' component={LeaderBoard} />\r\n        </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}