{"version":3,"sources":["Nav.jsx","Home.jsx","About.jsx","Contact.jsx","Question.jsx","Questions.jsx","QuizPage.jsx","CreteQuiz.jsx","LeaderBoard.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Nav","react_default","a","createElement","react_router_dom","to","Home","About","Contact","Question","_ref","question","title","className","type","name","concat","_id","value","id","htmlFor","options","Questions","questions","map","src_Question","key","QuizPage","_this","match","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchQuestions","e","preventDefault","fetch","state","quizId","then","res","json","data","setState","quiz","starting","modalHidden","user","submitAnswers","inputNames","forEach","push","console","log","answers","document","forms","method","headers","Accept","Content-Type","body","JSON","stringify","takenBy","result","score","maxScore","displayModal","popup","style","display","params","quizCreator","_this2","_data$quizDetails","quizDetails","created","duration","creator","_this3","_this$state$quiz","creatorName","Date","toDateString","onClick","ref","elem","onSubmit","required","minLength","placeholder","src_Questions","Component","CreateQuiz","newQuestion","div","innerHTML","classList","add","getElementById","appendChild","saveQuestions","asyncToGenerator","regenerator_default","mark","_callee","creatorEmail","quizName","allQuestions","allAnswers","i","optionA","optionB","optionC","optionD","singleQuestion","_i","wrap","_context","prev","next","getElementsByClassName","sent","querySelectorAll","email","length","children","window","confirm","submitQuiz","stop","_x","apply","arguments","_callee2","response","_context2","alert","expires","addEventListener","target","contains","parentNode","remove","min","disabled","LeaderBoard","sort","b","Number","React","App","src_Nav","react_router","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yOA2BeA,MAxBf,WACE,OACCC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KACRJ,EAAAC,EAAAC,cAAA,mBAEDF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,UACRJ,EAAAC,EAAAC,cAAA,oBAEDF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,YACRJ,EAAAC,EAAAC,cAAA,sBAEDF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAE,kCACPJ,EAAAC,EAAAC,cAAA,mBAEDF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,eACRJ,EAAAC,EAAAC,cAAA,6BCVGG,MARf,WACE,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBCKSI,MARf,WACE,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BCKSK,MARf,WACE,OACEP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mEC0BSM,EA7BE,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAChB,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAAMQ,EAASC,OACfX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,cACXZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACXZ,EAAAC,EAAAC,cAAA,SAAOW,KAAK,QAAQC,KAAI,IAAAC,OAAML,EAASM,KAAOC,MAAM,IAAIC,GAAE,MAAAH,OAAQL,EAASM,IAAjB,OAC1DhB,EAAAC,EAAAC,cAAA,SAAOiB,QAAO,MAAAJ,OAAQL,EAASM,IAAjB,MAA0BN,EAASU,QAAQ,KAE7DpB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACXZ,EAAAC,EAAAC,cAAA,SAAOW,KAAK,QAAQC,KAAI,IAAAC,OAAML,EAASM,KAAOC,MAAM,IAAIC,GAAE,MAAAH,OAAQL,EAASM,IAAjB,OAC1DhB,EAAAC,EAAAC,cAAA,SAAOiB,QAAO,MAAAJ,OAAQL,EAASM,IAAjB,MAA0BN,EAASU,QAAQ,MAGjEpB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,cACXZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACXZ,EAAAC,EAAAC,cAAA,SAAOW,KAAK,QAAQC,KAAI,IAAAC,OAAML,EAASM,KAAOC,MAAM,IAAIC,GAAE,MAAAH,OAAQL,EAASM,IAAjB,OAC1DhB,EAAAC,EAAAC,cAAA,SAAOiB,QAAO,MAAAJ,OAAQL,EAASM,IAAjB,MAA0BN,EAASU,QAAQ,KAE7DpB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACXZ,EAAAC,EAAAC,cAAA,SAAOW,KAAK,QAAQC,KAAI,IAAAC,OAAML,EAASM,KAAOC,MAAM,IAAIC,GAAE,MAAAH,OAAQL,EAASM,IAAjB,OAC1DhB,EAAAC,EAAAC,cAAA,SAAOiB,QAAO,MAAAJ,OAAQL,EAASM,IAAjB,MAA0BN,EAASU,QAAQ,QCZ9DC,EARG,SAAAZ,GAAmB,IAAhBa,EAAgBb,EAAhBa,UACjB,OACItB,EAAAC,EAAAC,cAAA,WACMoB,EAAUC,IAAI,SAAAb,GAAQ,OAAIV,EAAAC,EAAAC,cAACsB,EAAD,CAAUC,IAAKf,EAASM,IAAMN,SAAYA,QCuGnEgB,cAzGX,SAAAA,EAAAjB,GAAoB,IAAAkB,EAAPC,EAAOnB,EAAPmB,MAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBC,EAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QAuBJI,eAAiB,SAACC,GACdA,EAAEC,iBACFC,MAAK,8CAAAvB,OAA+CY,EAAKY,MAAMC,OAA1D,UACJC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACFjB,EAAKkB,SAAS,CACVC,KAAOF,EAAKE,KACZC,UAAU,EACVC,aAAc,EACdC,KAAOtB,EAAKsB,KAAKhC,WAjCTU,EAsCpBuB,cAAgB,SAACd,GACbA,EAAEC,iBACF,IAAIc,EAAa,GACjBxB,EAAKY,MAAMO,KAAKxB,UAAU8B,QAAQ,SAAA1C,GAC9ByC,EAAWE,KAAK3C,EAASM,OAE7BsC,QAAQC,IAAIJ,GAEZ,IAAIK,EAAU,GAEdL,EAAWC,QAAQ,SAAAtC,GACf0C,EAAQH,KAAKI,SAASC,MAAM,GAAf,IAAA3C,OAAsBD,IAAQG,SAE/CqC,QAAQC,IAAIC,GACZlB,MAAK,gDAAAvB,OAAiDY,EAAKY,MAAMO,KAAK9B,KAAO,CACzE2C,OAAS,OACTC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACT,UAASU,QAAUvC,EAAKY,MAAMU,SAEvDR,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIU,QAAQC,IAAR,GAAAxC,OAAe6B,EAAKuB,OAAOrD,KAA3B,cAAAC,OAA4C6B,EAAKuB,OAAOC,MAAxD,4BAAArD,OAAwF6B,EAAKyB,cA7D3F1C,EAgEpB2C,aAAe,WACX3C,EAAK4C,MAAMC,MAAMC,QAAU,SA/D3B9C,EAAKY,MAAQ,CACTC,OAASZ,EAAM8C,OAAOlC,OACtBM,KAAO,KACP6B,YAAc,KACd5B,UAAW,EACXE,KAAO,IAEXK,QAAQC,IAAI5B,EAAKY,MAAMC,QATPb,mFAYA,IAAAiD,EAAA7C,KAChBO,MAAK,8CAAAvB,OAA+CgB,KAAKQ,MAAMC,SAC9DC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAQ,IAAAiC,EACoCjC,EAAKkC,YAA3CC,EADEF,EACFE,QAASjE,EADP+D,EACO/D,KAAMkE,EADbH,EACaG,SAAWC,EADxBJ,EACwBI,QAClCL,EAAK/B,SAAS,CACVC,KAAO,CAACiC,UAASjE,OAAMkE,YACvBL,YAAcM,uCAiDlB,IAAAC,EAAAnD,KACJ,GAAGA,KAAKQ,MAAMO,KAAM,CAChBQ,QAAQC,IAAIxB,KAAKQ,MAAMO,MADP,IAAAqC,EAEkBpD,KAAKQ,MAAMO,KAAtChC,EAFSqE,EAETrE,KAAMkE,EAFGG,EAEHH,SAAUD,EAFPI,EAEOJ,QACRK,EAAgBrD,KAAKQ,MAAMoC,YAAlC7D,KACR,IAAKiB,KAAKQ,MAAMQ,SACZ,OACI/C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKY,GACLd,EAAAC,EAAAC,cAAA,uBAAekF,GACfpF,EAAAC,EAAAC,cAAA,uBAAe8E,GACfhF,EAAAC,EAAAC,cAAA,sBAAc,IAAImF,KAAKN,GAASO,gBAChCtF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQqF,QAAWxD,KAAKuC,cAAxB,cAEJtE,EAAAC,EAAAC,cAAA,OAAKsF,IAAO,SAAAC,GAAI,OAAIP,EAAKX,MAAQkB,GAAM7E,UAAU,SAC7CZ,EAAAC,EAAAC,cAAA,QAAMwF,SAAW3D,KAAKI,gBAClBnC,EAAAC,EAAAC,cAAA,SAAOyF,UAAQ,EAACH,IAAK,SAAAC,GAAI,OAAIP,EAAKjC,KAAOwC,GAAMG,UAAU,IAAI/E,KAAK,OAAOgF,YAAY,eACrF7F,EAAAC,EAAAC,cAAA,UAAQW,KAAK,UAAb,YAMpB,GAAGkB,KAAKQ,MAAMQ,SACV,OACI/C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC4F,EAAD,CAAWxE,UAAaS,KAAKQ,MAAMO,KAAKxB,YACxCtB,EAAAC,EAAAC,cAAA,UAAQqF,QAAWxD,KAAKmB,eAAxB,gBAKhB,OAAOlD,EAAAC,EAAAC,cAAA,mBAtGQ6F,sCC2IRC,cA1IX,SAAAA,IAAa,IAAArE,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAiE,IACTrE,EAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmE,GAAA9D,KAAAH,QAWJkE,YAAc,WACV,IAAMC,EAAMzC,SAASvD,cAAc,OACnCgG,EAAIC,UAAY,0yBAChBD,EAAIE,UAAUC,IAAI,YACE5C,SAAS6C,eAAe,aAChCC,YAAYL,IAjBfvE,EAoBb6E,cApBa,eAAA/F,EAAAoB,OAAA4E,EAAA,EAAA5E,CAAA6E,EAAAzG,EAAA0G,KAoBG,SAAAC,EAAOxE,GAAP,IAAAd,EAAAkC,EAAA4B,EAAAJ,EAAA6B,EAAAC,EAAA7B,EAAA8B,EAAAC,EAAAC,EAAAtG,EAAAuG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAb,EAAAzG,EAAAuH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZvF,EAAEC,iBADUoF,EAAAE,KAAA,EAEUlE,SAASmE,uBAAuB,YAF1C,cAERtG,EAFQmG,EAAAI,KAGZvE,QAAQC,IAAIjC,GAHAmG,EAAAE,KAAA,EAIQlE,SAASqE,iBAAiB,UAJlC,OAeZ,IAXItE,EAJQiE,EAAAI,KAKNzC,EAAc3B,SAAS6C,eAAe,QAAQrF,MAC9C+D,EAAWvB,SAAS6C,eAAe,YAAYrF,MAC/C4F,EAAepD,SAAS6C,eAAe,SAASrF,MAChD6F,EAAWrD,SAAS6C,eAAe,SAASrF,MAC5CgE,EAAU,CACZnE,KAAOsE,EACP2C,MAAQlB,GAERE,EAAe,GACfC,EAAa,GACTC,EAAI,EAAGA,EAAI3F,EAAU0G,OAAQf,IAC7BtG,EAAQW,EAAU2F,GAAGgB,SAAS,GAAGhH,MACjCiG,EAAU5F,EAAU2F,GAAGgB,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGhH,MAC3DkG,EAAU7F,EAAU2F,GAAGgB,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGhH,MAC3DmG,EAAU9F,EAAU2F,GAAGgB,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGhH,MAC3DoG,EAAU/F,EAAU2F,GAAGgB,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGhH,MAE3DqG,EAAiB,CAAC3G,MAAQA,EAAOS,QADxB,CAAC8F,EAASC,EAASC,EAASC,IAEzCN,EAAa1D,KAAKiE,GAEtB,IAAQL,EAAI,EAAGA,EAAIzD,EAAQwE,OAAQf,IAC/BD,EAAW3D,KAAKG,EAAQyD,GAAGhG,OAE/BU,EAAKkB,SAAS,CACV/B,KAAOgG,EACPxF,UAAYyF,EACZvD,QAAUwD,EACV/B,QAAUA,EACVD,SAAWA,IAEZkD,OAAOC,QAAP,sDAAApH,OAAqEgG,EAAaiB,OAAlF,iBACCrG,EAAKyG,aApCG,yBAAAX,EAAAY,SAAAzB,MApBH,gBAAA0B,GAAA,OAAA7H,EAAA8H,MAAAxG,KAAAyG,YAAA,GAAA7G,EA4DbyG,WA5DavG,OAAA4E,EAAA,EAAA5E,CAAA6E,EAAAzG,EAAA0G,KA4DA,SAAA8B,IAAA,IAAAC,EAAAhG,EAAA,OAAAgE,EAAAzG,EAAAuH,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACcrF,MAAM,gDAAiD,CAC1EqB,OAAS,OACTC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUtC,EAAKY,SAPrB,cACHmG,EADGC,EAAAd,KAAAc,EAAAhB,KAAA,EASSe,EAAS/F,OATlB,OASHD,EATGiG,EAAAd,KAUTe,MAAMlG,GAVG,wBAAAiG,EAAAN,SAAAI,MA1DT9G,EAAKY,MAAQ,CACTjB,UAAY,GACZkC,QAAU,GACVyB,QAAU,KACVD,SAAW,KACX6D,QAAU,MAPLlH,mFAyETuG,OAAOY,iBAAiB,QAAS,SAAA1G,GAC1BA,EAAE2G,OAAO3C,UAAU4C,SAAS,oBAC3B5G,EAAE2G,OAAOE,WAAWA,WAAWC,4CAMvC,OACIlJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMwF,SAAU3D,KAAKyE,eACjBxG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBADJ,IAC2BF,EAAAC,EAAAC,cAAA,SAAOyF,UAAQ,EAACzE,GAAG,OAAOL,KAAK,UAE1Db,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iCADJ,IACoCF,EAAAC,EAAAC,cAAA,SAAOyF,UAAQ,EAACzE,GAAG,QAAQL,KAAK,WAEpEb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yCADJ,IAC4CF,EAAAC,EAAAC,cAAA,SAAOyF,UAAQ,EAACzE,GAAG,WAAWL,KAAK,SAASsI,IAAI,OAE5FnJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4BADJ,IAC+BF,EAAAC,EAAAC,cAAA,SAAOyF,UAAQ,EAACzE,GAAG,QAAQL,KAAK,UAE/Db,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,aACJlB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,YACXZ,EAAAC,EAAAC,cAAA,YAAUyF,UAAQ,EAAC/E,UAAU,iBAAiBiF,YAAY,aAC1D7F,EAAAC,EAAAC,cAAA,OAAKU,UAAU,cACXZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACXZ,EAAAC,EAAAC,cAAA,YAAUyF,UAAQ,EAACE,YAAY,cAEnC7F,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACXZ,EAAAC,EAAAC,cAAA,YAAUyF,UAAQ,EAACE,YAAY,eAIvC7F,EAAAC,EAAAC,cAAA,OAAKU,UAAU,cACXZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACXZ,EAAAC,EAAAC,cAAA,YAAUyF,UAAQ,EAACE,YAAY,cAEnC7F,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACXZ,EAAAC,EAAAC,cAAA,YAAUyF,UAAQ,EAACE,YAAY,eAGvC7F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,UAAf,yBACAnB,EAAAC,EAAAC,cAAA,UAAQgB,GAAG,SAASN,UAAU,WAC1BZ,EAAAC,EAAAC,cAAA,UAAQkJ,UAAQ,GAAhB,iBACApJ,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,YACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,YACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,YACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,KAAd,aAEJjB,EAAAC,EAAAC,cAAA,UAAQS,MAAM,kBAAkBC,UAAU,mBAA1C,aAIZZ,EAAAC,EAAAC,cAAA,UAAQqF,QAASxD,KAAKkE,aAAtB,OACAjG,EAAAC,EAAAC,cAAA,UAAQW,KAAK,UAAb,wBAnIKkF,aC8DVsD,cA9DX,SAAAA,EAAA5I,GAAoB,IAAAkB,EAAPC,EAAOnB,EAAPmB,MAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsH,IAChB1H,EAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwH,GAAAnH,KAAAH,QACKQ,MAAQ,CACTC,OAASZ,EAAM8C,OAAOlC,OACtBM,KAAO,KACP6B,YAAc,MALFhD,mFASA,IAAAiD,EAAA7C,KAChBO,MAAK,8CAAAvB,OAA+CgB,KAAKQ,MAAMC,OAA1D,iBACJC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAQ,IACFhC,EAAmCgC,EAAnChC,KAAMoD,EAA6BpB,EAA7BoB,QAASa,EAAoBjC,EAApBiC,QAASE,EAAWnC,EAAXmC,QAChCL,EAAK/B,SAAS,CACVC,KAAO,CAAChC,OAAMoD,UAASa,WACvBJ,YAAcM,uCAQtB,GAAGlD,KAAKQ,MAAMO,KAAM,KAAAqC,EACepD,KAAKQ,MAAMO,KAArCoB,EADWiB,EACXjB,QAASpD,EADEqE,EACFrE,KAAMiE,EADJI,EACIJ,QACRK,EAAiBrD,KAAKQ,MAAMoC,YAAnC7D,KACP,OACEd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKY,GACLd,EAAAC,EAAAC,cAAA,wBAAgBkF,EAAhB,OAAiC,IAAIC,KAAKN,GAASO,gBACnDtF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,kBACCF,EAAAC,EAAAC,cAAA,qBAGRF,EAAAC,EAAAC,cAAA,aAEIgE,EACCoF,KAAK,SAACrJ,EAAEsJ,GAAH,OAASC,OAAOD,EAAEnF,OAASoF,OAAOvJ,EAAEmE,SACzC7C,IAAI,SAAA0B,GAAI,OACJjD,EAAAC,EAAAC,cAAA,MAAIuB,IAAKwB,EAAKjC,KACXhB,EAAAC,EAAAC,cAAA,UAAK+C,EAAKnC,MACVd,EAAAC,EAAAC,cAAA,UAAK+C,EAAKmB,aAQlC,OACIpE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,iDAzDUuJ,IAAM1D,iBC0BjB2D,MAhBf,WACE,OACE1J,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACyJ,EAAD,MACA3J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACE5J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1J,IACjCL,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWzJ,IAChCN,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWxJ,IAClCP,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWrI,IAC7C1B,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAW/D,IACrChG,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,4BAA4BC,UAAWV,OCVvCW,QACW,cAA7B9B,OAAO+B,SAASC,UAEe,UAA7BhC,OAAO+B,SAASC,UAEhBhC,OAAO+B,SAASC,SAAStI,MACvB,2DCZNuI,IAASC,OAAOpK,EAAAC,EAAAC,cAACmK,EAAD,MAAS5G,SAAS6C,eAAe,SD2H3C,kBAAmBgE,WACrBA,UAAUC,cAAcC,MAAM/H,KAAK,SAAAgI,GACjCA,EAAaC","file":"static/js/main.f7face4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n  return (\r\n   <nav>\r\n       <ul>\r\n           <Link to='/'>\r\n            <li>Home</li>\r\n           </Link>\r\n           <Link to='/about'>\r\n            <li>About</li>\r\n           </Link>\r\n           <Link to='/contact'>\r\n            <li>Contact</li>\r\n           </Link>\r\n           <Link to={`/quiz/5d304edf9f12db292c6c4f82`}>\r\n            <li>Quiz</li>\r\n           </Link>\r\n           <Link to='/createquiz'>\r\n            <li>Create Quiz</li>\r\n           </Link>\r\n       </ul>\r\n   </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h3> Home </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h3> About Page </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div>\r\n      <h3> Contact Page </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react'\r\n\r\nconst Question = ({ question }) => {\r\n    return (\r\n        <div>\r\n            <div>{question.title}</div>\r\n            <div className=\"option-row\">\r\n                <div className=\"option\">\r\n                    <input type=\"radio\" name={`q${question._id}`} value=\"A\" id={`opt${question._id}A`}/>\r\n                    <label htmlFor={`opt${question._id}A`}>{question.options[0]}</label>\r\n                </div>\r\n                <div className=\"option\">\r\n                    <input type=\"radio\" name={`q${question._id}`} value=\"B\" id={`opt${question._id}B`}/>\r\n                    <label htmlFor={`opt${question._id}B`}>{question.options[1]}</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"option-row\">\r\n                <div className=\"option\">\r\n                    <input type=\"radio\" name={`q${question._id}`} value=\"C\" id={`opt${question._id}C`}/>\r\n                    <label htmlFor={`opt${question._id}C`}>{question.options[2]}</label>\r\n                </div>\r\n                <div className=\"option\">\r\n                    <input type=\"radio\" name={`q${question._id}`} value=\"D\" id={`opt${question._id}D`}/>\r\n                    <label htmlFor={`opt${question._id}D`}>{question.options[3]}</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Question;","import React from 'react'\r\nimport Question from './Question';\r\n\r\nconst Questions = ({ questions }) => {\r\n    return (\r\n        <div>\r\n             {questions.map(question => <Question key={question._id}  question = {question} />)}\r\n         </div> \r\n     )\r\n}\r\n\r\nexport default Questions;","import React, {Component} from 'react';\r\nimport Questions from './Questions';\r\n\r\nclass QuizPage extends Component {\r\n    constructor({match}){\r\n        super()\r\n        this.state = {\r\n            quizId : match.params.quizId,\r\n            quiz : null,\r\n            quizCreator : null,\r\n            starting : false,\r\n            user : ''\r\n        }\r\n        console.log(this.state.quizId);\r\n    }\r\n   \r\n    componentDidMount() {\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/quiz/${this.state.quizId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            const { created, name, duration,  creator } = data.quizDetails;\r\n            this.setState({\r\n                quiz : {created, name, duration},\r\n                quizCreator : creator\r\n            })\r\n        })\r\n    }\r\n\r\n    fetchQuestions = (e) => {\r\n        e.preventDefault()\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/quiz/${this.state.quizId}/take`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                quiz : data.quiz,\r\n                starting: true,\r\n                modalHidden : true,\r\n                user : this.user.value\r\n            })\r\n        })\r\n    }\r\n\r\n    submitAnswers = (e) => {\r\n        e.preventDefault();\r\n        let inputNames = [];\r\n        this.state.quiz.questions.forEach(question => {\r\n            inputNames.push(question._id)\r\n        });\r\n        console.log(inputNames);\r\n        // let answersInputs = document.querySelectorAll(`input`);\r\n        let answers = []\r\n        ;\r\n        inputNames.forEach(name => {\r\n            answers.push(document.forms[0][`q${name}`].value)\r\n        });\r\n        console.log(answers);\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/submit/${this.state.quiz._id}`, {\r\n            method : 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({answers, takenBy : this.state.user}),\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => console.log(`${data.result.name}, you got ${data.result.score} questions right out of ${data.maxScore}`))\r\n    }\r\n   \r\n    displayModal = () => {\r\n        this.popup.style.display = \"block\";\r\n    }\r\n\r\n    render(){\r\n        if(this.state.quiz) {\r\n            console.log(this.state.quiz);\r\n            const {name, duration, created} = this.state.quiz;\r\n            const { name : creatorName } = this.state.quizCreator;\r\n            if (!this.state.starting) {\r\n                return (\r\n                    <div>\r\n                        <h1>{name}</h1>\r\n                        <p>Created by {creatorName}</p>\r\n                        <h2>Duration :{duration}</h2>\r\n                        <h3>Created :{new Date(created).toDateString()}</h3>\r\n                        <div>\r\n                            <button onClick = {this.displayModal}>TAKE QUIZ</button>\r\n                        </div>  \r\n                        <div ref = {elem => this.popup = elem} className=\"popup\">\r\n                            <form onSubmit= {this.fetchQuestions}>\r\n                                <input required ref={elem => this.user = elem} minLength=\"3\" type=\"text\" placeholder=\"Enter Name\"/>\r\n                                <button type=\"submit\" >START</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            if(this.state.starting) {\r\n                return (\r\n                    <form>\r\n                        <Questions questions = {this.state.quiz.questions} />\r\n                        <button onClick = {this.submitAnswers}>SUBMIT QUIZ</button>\r\n                    </form>\r\n                )\r\n            }\r\n        }\r\n        return <div></div>\r\n    }\r\n}\r\n\r\nexport default QuizPage;","import React, {Component} from 'react';\r\n\r\n\r\nclass CreateQuiz extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            questions : [],\r\n            answers : [],\r\n            creator : null,\r\n            duration : null,\r\n            expires : null\r\n        }\r\n\r\n    }\r\n\r\n    newQuestion = () => {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = '<textarea required class=\"question-input\" placeholder=\"Question\"></textarea><div class=\"option-row\"><div class=\"option\"><textarea required placeholder=\"OPTION A\"></textarea></div><div class=\"option\"><textarea required placeholder=\"OPTION B\"></textarea></div></div><div class=\"option-row\"><div class=\"option\"><textarea required placeholder=\"OPTION C\"></textarea></div><div class=\"option\"><textarea required placeholder=\"OPTION D\"></textarea></div></div><div><label for=\"answer\">Choose correct answer</label><select id=\"answer\" class=\"answers\"><option disabled>Choose Answer</option><option value=\"A\">Option A</option><option value=\"B\">Option B</option><option value=\"C\">Option C</option><option value=\"D\">Option D</option></select><button title=\"Delete Question\" class=\"delete-question\">DELETE</button></div>';\r\n        div.classList.add('question');\r\n       const questionsBox = document.getElementById('questions');\r\n       questionsBox.appendChild(div);\r\n    }\r\n\r\n    saveQuestions = async (e) => {\r\n        e.preventDefault();\r\n        let questions = await document.getElementsByClassName('question');\r\n        console.log(questions)\r\n        let answers = await document.querySelectorAll('select');\r\n        const creatorName = document.getElementById('name').value;\r\n        const duration = document.getElementById('duration').value;\r\n        const creatorEmail = document.getElementById('email').value;\r\n        const quizName = document.getElementById('qname').value;\r\n        const creator = {\r\n            name : creatorName,\r\n            email : creatorEmail\r\n        }\r\n        let allQuestions = [];\r\n        let allAnswers = [];\r\n        for(let i = 0; i < questions.length; i++){\r\n            let title = questions[i].children[0].value;\r\n            let optionA = questions[i].children[1].children[0].children[0].value;\r\n            let optionB = questions[i].children[1].children[1].children[0].value;\r\n            let optionC = questions[i].children[2].children[0].children[0].value;\r\n            let optionD = questions[i].children[2].children[1].children[0].value;\r\n            let options =[optionA, optionB, optionC, optionD];\r\n            let singleQuestion = {title : title, options : options};\r\n            allQuestions.push(singleQuestion);\r\n        }\r\n        for(let i = 0; i < answers.length; i++) {\r\n            allAnswers.push(answers[i].value);\r\n        }\r\n        this.setState({\r\n            name : quizName,\r\n            questions : allQuestions,\r\n            answers : allAnswers,\r\n            creator : creator,\r\n            duration : duration\r\n        });\r\n        if(window.confirm(`Are you sure you want to submit ? \\n Quiz contains ${allQuestions.length} questions `)) {\r\n            this.submitQuiz();\r\n        }\r\n    }\r\n\r\n    submitQuiz = async () => {\r\n        const response = await fetch('https://lalaquiz.herokuapp.com/api/v1/newquiz', {\r\n            method : 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state),\r\n        });\r\n        const res = await response.json();\r\n        alert(res);\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('click', e => {\r\n            if(e.target.classList.contains('delete-question')) {\r\n                e.target.parentNode.parentNode.remove()\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.saveQuestions}>\r\n                    <div>\r\n                        <label>Name : </label> <input required id=\"name\" type=\"text\"/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Email Address : </label> <input required id=\"email\" type=\"email\" />\r\n                    </div>\r\n                    <div>\r\n                        <label>Duration (in seconds) : </label> <input required id=\"duration\" type=\"number\" min=\"1\"/>\r\n                    </div>\r\n                    <div>\r\n                        <label>QUIZ NAME :</label> <input required id=\"qname\" type=\"text\" />\r\n                    </div>\r\n                    <div id=\"questions\">\r\n                        <div className=\"question\">\r\n                            <textarea required className=\"question-input\" placeholder=\"Question\"></textarea>\r\n                            <div className=\"option-row\">\r\n                                <div className=\"option\">\r\n                                    <textarea required placeholder=\"OPTION A\"></textarea>\r\n                                </div>\r\n                                <div className=\"option\">\r\n                                    <textarea required placeholder=\"OPTION B\"></textarea>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"option-row\">\r\n                                <div className=\"option\">\r\n                                    <textarea required placeholder=\"OPTION C\"></textarea>\r\n                                </div>\r\n                                <div className=\"option\">\r\n                                    <textarea required placeholder=\"OPTION D\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"answer\">Choose correct answer</label>\r\n                                <select id=\"answer\" className='answers'>\r\n                                    <option disabled>Choose Answer</option>\r\n                                    <option value=\"A\">Option A</option>\r\n                                    <option value=\"B\">Option B</option>\r\n                                    <option value=\"C\">Option C</option>\r\n                                    <option value=\"D\">Option D</option>\r\n                                </select>\r\n                                <button title=\"Delete Question\" className=\"delete-question\">DELETE</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={this.newQuestion} >ADD</button>\r\n                    <button type=\"submit\" >SUBMIT QUIZ</button>\r\n                    {/* <button onClick={this.submitQuiz}>SUBMIT QUIZ</button> */}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateQuiz;","import React from 'react'\r\n\r\nclass LeaderBoard extends React.Component {\r\n    constructor({match}){\r\n        super()\r\n        this.state = {\r\n            quizId : match.params.quizId,\r\n            quiz : null,\r\n            quizCreator : null,\r\n        }\r\n    }\r\n   \r\n    componentDidMount() {\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/quiz/${this.state.quizId}/leaderboard`)\r\n        .then(res => res.json())\r\n        .then(quiz => {\r\n            const { name, takenBy, created, creator} = quiz;\r\n            this.setState({\r\n                quiz : {name, takenBy, created},\r\n                quizCreator : creator\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        if(this.state.quiz) {\r\n          const {takenBy, name, created} = this.state.quiz;\r\n          const {name : creatorName} =   this.state.quizCreator;\r\n          return (\r\n            <div>\r\n                <h3>{name}</h3>\r\n                <h4>Created by {creatorName} at {new Date(created).toDateString()}</h4>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                           <td>Name</td>\r\n                            <td>Score</td> \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        takenBy\r\n                        .sort((a,b) => Number(b.score) - Number(a.score))\r\n                        .map(user => \r\n                            (<tr key={user._id}>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.score}</td>\r\n                            </tr>))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Quiz Not Found </h3>\r\n                <p>This quiz might have expired</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeaderBoard;","import React from 'react';\nimport  { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Nav from './Nav';\nimport Home from './Home';\nimport About from './About';\nimport Contact from './Contact';\nimport QuizPage from './QuizPage';\nimport CreateQuiz from './CreteQuiz';\nimport LeaderBoard from './LeaderBoard';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/about' component={About} />\n        <Route path='/contact' component={Contact} />\n        <Route exact path='/quiz/:quizId' component={QuizPage} />\n        <Route path='/createquiz' component={CreateQuiz} />\n        <Route path='/quiz/:quizId/leaderboard' component={LeaderBoard} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}