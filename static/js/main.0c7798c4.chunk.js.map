{"version":3,"sources":["Nav.jsx","Home.jsx","HowItWorks.jsx","Question.jsx","Questions.jsx","Timer.jsx","QuizPage.jsx","CreteQuiz.jsx","LeaderBoard.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Nav","react_default","a","createElement","react_router_dom","to","className","Home","document","title","HowItWorks","Question","_ref","question","type","name","concat","_id","value","id","htmlFor","options","Questions","questions","style","marginTop","map","src_Question","key","Timer","min","sec","stop","total","Number","x","setInterval","forms","minutes","Math","floor","seconds","secondsDisplay","minutesDisplay","getElementById","innerHTML","clearInterval","QuizPage","_this","match","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchQuestions","e","preventDefault","fetch","state","quizId","then","res","json","data","setState","quiz","starting","modalHidden","user","submitAnswers","inputNames","forEach","push","answers","method","headers","Accept","Content-Type","body","JSON","stringify","takenBy","result","score","max","maxScore","percent","displayModal","popup","display","params","quizCreator","_this2","_data$quizDetails","quizDetails","created","duration","creator","_this3","_this$state","_this$state$quiz","creatorName","Date","toDateString","onClick","ref","elem","onSubmit","required","minLength","placeholder","src_Timer","src_Questions","href","target","rel","Component","CreateQuiz","newQuestion","div","classList","add","appendChild","saveQuestions","asyncToGenerator","regenerator_default","mark","_callee","durationMinutes","durationSeconds","creatorEmail","quizName","allQuestions","allAnswers","i","optionA","optionB","optionC","optionD","singleQuestion","_i","wrap","_context","prev","next","getElementsByClassName","sent","querySelectorAll","email","length","children","window","confirm","submitQuiz","_x","apply","arguments","_callee2","response","_context2","alert","expires","addEventListener","contains","parentNode","remove","disabled","LeaderBoard","sort","b","React","NavRoute","exact","path","component","react_router","render","props","src_Nav","App","App_NavRoute","Boolean","location","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c7798c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n  return (\r\n   <nav>\r\n       <ul>\r\n           <Link to='/'>\r\n            <li>Home</li>\r\n           </Link>\r\n           <span className=\"right\">\r\n             <Link to='/howitworks'>\r\n              <li>How It Works</li>\r\n            </Link>\r\n            <Link to='/createquiz'>\r\n              <li>Create Quiz</li>\r\n            </Link>\r\n           </span>\r\n       </ul>\r\n   </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nfunction Home() {\r\n  document.title = 'Quizza';\r\n  return (\r\n    <div>\r\n      <h3> Home </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction HowItWorks() {\r\n  document.title = `How It Works | Quizza`;\r\n  return (\r\n    <div>\r\n      <h3> How It Works </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HowItWorks;\r\n","import React from 'react'\r\n\r\nconst Question = ({ question }) => {\r\n    return (\r\n        <div>\r\n            <div>{question.title}</div>\r\n            <div className=\"option-row\">\r\n                <div className=\"option\">\r\n                    <input type=\"radio\" name={`q${question._id}`} value=\"A\" id={`opt${question._id}A`}/>\r\n                    <label htmlFor={`opt${question._id}A`}>{question.options[0]}</label>\r\n                </div>\r\n                <div className=\"option\">\r\n                    <input type=\"radio\" name={`q${question._id}`} value=\"B\" id={`opt${question._id}B`}/>\r\n                    <label htmlFor={`opt${question._id}B`}>{question.options[1]}</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"option-row\">\r\n                <div className=\"option\">\r\n                    <input type=\"radio\" name={`q${question._id}`} value=\"C\" id={`opt${question._id}C`}/>\r\n                    <label htmlFor={`opt${question._id}C`}>{question.options[2]}</label>\r\n                </div>\r\n                <div className=\"option\">\r\n                    <input type=\"radio\" name={`q${question._id}`} value=\"D\" id={`opt${question._id}D`}/>\r\n                    <label htmlFor={`opt${question._id}D`}>{question.options[3]}</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Question;","import React from 'react'\r\nimport Question from './Question';\r\n\r\nconst Questions = ({ questions }) => {\r\n    return (\r\n        <div style={{marginTop : '50px'}}>\r\n             {questions.map(question => <Question key={question._id}  question = {question} />)}\r\n         </div> \r\n     )\r\n}\r\n\r\nexport default Questions;","import React from 'react';\r\n\r\n\r\n\r\nconst Timer = ({min, sec, stop}) => {\r\n    var total = (min * 60 ) + Number(sec);\r\n    // Update the count down every 1 second\r\n    var x = setInterval(function() {\r\n        if(!document.forms[0]) {\r\n            clearInterval(x);\r\n            return;\r\n        }\r\n      //calculations for minutes and seconds\r\n      var minutes = Math.floor((total % (60 * 60)) / 60);\r\n      var seconds = Math.floor((total % (60)));\r\n      \r\n      var secondsDisplay = seconds > 10 ? seconds : '0'+seconds;\r\n      var minutesDisplay = minutes > 10 ? minutes : '0'+minutes;\r\n        \r\n      // Output the result in an element with id=\"demo\"\r\n      document.getElementById(\"countdown\").innerHTML = minutesDisplay + \":\" + secondsDisplay;\r\n       total--;\r\n      // If the count down is over, auto submit\r\n      if (total < 0) {\r\n        clearInterval(x);\r\n        stop()\r\n      }\r\n     \r\n    }, 1000);\r\n    return (\r\n        <div id=\"countdown\"></div> \r\n    )\r\n}\r\n\r\nexport default Timer;\r\n","import React, {Component} from 'react';\r\nimport Questions from './Questions';\r\nimport Timer from './Timer';\r\n\r\nclass QuizPage extends Component {\r\n    constructor({match}){\r\n        super()\r\n        this.state = {\r\n            quizId : match.params.quizId,\r\n            quiz : null,\r\n            quizCreator : null,\r\n            starting : false,\r\n            user : '',\r\n            result : null\r\n        }\r\n    }\r\n   \r\n    componentDidMount() {\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/quiz/${this.state.quizId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            const { created, name, duration,  creator } = data.quizDetails;\r\n            this.setState({\r\n                quiz : {created, name, duration},\r\n                quizCreator : creator\r\n            })\r\n            document.title = `${name} | Quizza`;\r\n        })\r\n    }\r\n\r\n    fetchQuestions = (e) => {\r\n        e.preventDefault()\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/quiz/${this.state.quizId}/take`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                quiz : data.quiz,\r\n                starting: true,\r\n                modalHidden : true,\r\n                user : this.user.value\r\n            })\r\n        })\r\n    }\r\n\r\n    submitAnswers = (e) => {\r\n        if(e) {\r\n           e.preventDefault(); \r\n        }\r\n        let inputNames = [];\r\n        this.state.quiz.questions.forEach(question => {\r\n            inputNames.push(question._id)\r\n        });\r\n        let answers = []\r\n        ;\r\n        inputNames.forEach(name => {\r\n            answers.push(document.forms[0][`q${name}`].value)\r\n        });\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/submit/${this.state.quiz._id}`, {\r\n            method : 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({answers, takenBy : this.state.user}),\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n                this.setState({\r\n                    starting : false,\r\n                    result : {\r\n                        score : data.result.score,\r\n                        max : data.maxScore,\r\n                        percent : (data.result.score/data.maxScore) * 100\r\n                    }\r\n                })\r\n            }\r\n        )\r\n    }\r\n   \r\n    displayModal = () => {\r\n        this.popup.style.display = \"block\";\r\n    }\r\n\r\n    render(){\r\n        if(this.state.quiz) {\r\n            const {user, result} = this.state;\r\n            const {name, duration, created} = this.state.quiz;\r\n            const { name : creatorName } = this.state.quizCreator;\r\n            if (!this.state.starting && !this.state.result) {\r\n                return (\r\n                    <div>\r\n                        <h1>{name}</h1>\r\n                        <p>Created by {creatorName}</p>\r\n                        <h2>Duration : {`${duration.min} minutes : ${duration.sec} seconds`}</h2>\r\n                        <h3>Created : {new Date(created).toDateString()}</h3>\r\n                        <div>\r\n                            <button onClick = {this.displayModal}>TAKE QUIZ</button>\r\n                        </div>  \r\n                        <div ref = {elem => this.popup = elem} className=\"popup\">\r\n                            <form onSubmit= {this.fetchQuestions}>\r\n                                <input required ref={elem => this.user = elem} minLength=\"3\" type=\"text\" placeholder=\"Enter Name\"/>\r\n                                <button type=\"submit\" >START</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            if(this.state.starting) {\r\n                return (\r\n                    <div>\r\n                        <Timer stop = {this.submitAnswers} min = {this.state.quiz.duration.min} sec = {this.state.quiz.duration.sec} />\r\n                        <form>\r\n                            <Questions questions = {this.state.quiz.questions} />\r\n                            <button onClick = {this.submitAnswers}>SUBMIT QUIZ</button>\r\n                        </form>\r\n                    </div>\r\n                )\r\n            }\r\n            if(this.state.result) {\r\n                return (\r\n                    <div>\r\n                        <p>{`${user}, your score is ${result.percent}%`}</p>\r\n                        <p>{`You got ${result.score} questions correctly out of ${result.max}.`}</p>\r\n                        <p>See the quiz leaderboard and see where you rank amongst all who have taken quiz <a href={`https://quizza.live/#/quiz/${this.state.quizId}/leaderboard`} target=\"_blank\" rel=\"noopener noreferrer\">LEADERBOARD</a></p>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return <div></div>\r\n    }\r\n}\r\n\r\nexport default QuizPage;","import React, {Component} from 'react';\r\n\r\n\r\nclass CreateQuiz extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            questions : [],\r\n            answers : [],\r\n            creator : null,\r\n            duration : null,\r\n            expires : null\r\n        }\r\n\r\n    }\r\n\r\n    newQuestion = () => {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = '<textarea required class=\"question-input\" placeholder=\"Question\"></textarea><div class=\"option-row\"><div class=\"option\"><textarea required placeholder=\"OPTION A\"></textarea></div><div class=\"option\"><textarea required placeholder=\"OPTION B\"></textarea></div></div><div class=\"option-row\"><div class=\"option\"><textarea required placeholder=\"OPTION C\"></textarea></div><div class=\"option\"><textarea required placeholder=\"OPTION D\"></textarea></div></div><div><label for=\"answer\">Choose correct answer</label><select id=\"answer\" class=\"answers\"><option disabled>Choose Answer</option><option value=\"A\">Option A</option><option value=\"B\">Option B</option><option value=\"C\">Option C</option><option value=\"D\">Option D</option></select><button title=\"Delete Question\" class=\"delete-question\">DELETE</button></div>';\r\n        div.classList.add('question');\r\n       const questionsBox = document.getElementById('questions');\r\n       questionsBox.appendChild(div);\r\n    }\r\n\r\n    saveQuestions = async (e) => {\r\n        e.preventDefault();\r\n        let questions = await document.getElementsByClassName('question');\r\n        let answers = await document.querySelectorAll('select');\r\n        const creatorName = document.getElementById('name').value;\r\n        const durationMinutes = document.getElementById('duration-minutes').value;\r\n        const durationSeconds = document.getElementById('duration-seconds').value;\r\n        const duration = {\r\n            min : durationMinutes,\r\n            sec : durationSeconds\r\n        }\r\n        const creatorEmail = document.getElementById('email').value;\r\n        const quizName = document.getElementById('qname').value;\r\n        const creator = {\r\n            name : creatorName,\r\n            email : creatorEmail\r\n        }\r\n        let allQuestions = [];\r\n        let allAnswers = [];\r\n        for(let i = 0; i < questions.length; i++){\r\n            let title = questions[i].children[0].value;\r\n            let optionA = questions[i].children[1].children[0].children[0].value;\r\n            let optionB = questions[i].children[1].children[1].children[0].value;\r\n            let optionC = questions[i].children[2].children[0].children[0].value;\r\n            let optionD = questions[i].children[2].children[1].children[0].value;\r\n            let options =[optionA, optionB, optionC, optionD];\r\n            let singleQuestion = {title : title, options : options};\r\n            allQuestions.push(singleQuestion);\r\n        }\r\n        for(let i = 0; i < answers.length; i++) {\r\n            allAnswers.push(answers[i].value);\r\n        }\r\n        this.setState({\r\n            name : quizName,\r\n            questions : allQuestions,\r\n            answers : allAnswers,\r\n            creator : creator,\r\n            duration : duration\r\n        });\r\n        if(window.confirm(`Are you sure you want to submit ? \\n Quiz contains ${allQuestions.length} questions `)) {\r\n            this.submitQuiz();\r\n        }\r\n    }\r\n\r\n    submitQuiz = async () => {\r\n        const response = await fetch('https://lalaquiz.herokuapp.com/api/v1/newquiz', {\r\n            method : 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state),\r\n        });\r\n        const res = await response.json();\r\n        alert(res);\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('click', e => {\r\n            if(e.target.classList.contains('delete-question')) {\r\n                e.target.parentNode.parentNode.remove()\r\n            }\r\n        })\r\n        document.title = `Create Quiz | Quizza`;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.saveQuestions}>\r\n                    <div>\r\n                        <label>Name : </label> <input required id=\"name\" type=\"text\"/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Email Address : </label> <input required id=\"email\" type=\"email\" />\r\n                    </div>\r\n                    <div>\r\n                        <label>Duration : </label> <input required id=\"duration-minutes\" type=\"number\" max=\"60\" placeholder=\"MM\"/> :\r\n                        <input required id=\"duration-seconds\" type=\"number\" max=\"59\" placeholder=\"SS\"/>\r\n                    </div>\r\n                    <div>\r\n                        <label>QUIZ NAME :</label> <input required id=\"qname\" type=\"text\" />\r\n                    </div>\r\n                    <div id=\"questions\">\r\n                        <div className=\"question\">\r\n                            <textarea required className=\"question-input\" placeholder=\"Question\"></textarea>\r\n                            <div className=\"option-row\">\r\n                                <div className=\"option\">\r\n                                    <textarea required placeholder=\"OPTION A\"></textarea>\r\n                                </div>\r\n                                <div className=\"option\">\r\n                                    <textarea required placeholder=\"OPTION B\"></textarea>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"option-row\">\r\n                                <div className=\"option\">\r\n                                    <textarea required placeholder=\"OPTION C\"></textarea>\r\n                                </div>\r\n                                <div className=\"option\">\r\n                                    <textarea required placeholder=\"OPTION D\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"answer\">Choose correct answer</label>\r\n                                <select id=\"answer\" className='answers'>\r\n                                    <option disabled>Choose Answer</option>\r\n                                    <option value=\"A\">Option A</option>\r\n                                    <option value=\"B\">Option B</option>\r\n                                    <option value=\"C\">Option C</option>\r\n                                    <option value=\"D\">Option D</option>\r\n                                </select>\r\n                                <button title=\"Delete Question\" className=\"delete-question\">DELETE</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={this.newQuestion} >ADD</button>\r\n                    <button type=\"submit\" >SUBMIT QUIZ</button>\r\n                    {/* <button onClick={this.submitQuiz}>SUBMIT QUIZ</button> */}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateQuiz;","import React from 'react'\r\n\r\nclass LeaderBoard extends React.Component {\r\n    constructor({match}){\r\n        super()\r\n        this.state = {\r\n            quizId : match.params.quizId,\r\n            quiz : null,\r\n            quizCreator : null,\r\n        }\r\n    }\r\n   \r\n    componentDidMount() {\r\n        fetch(`https://lalaquiz.herokuapp.com/api/v1/quiz/${this.state.quizId}/leaderboard`)\r\n        .then(res => res.json())\r\n        .then(quiz => {\r\n            const { name, takenBy, created, creator} = quiz;\r\n            this.setState({\r\n                quiz : {name, takenBy, created},\r\n                quizCreator : creator\r\n            })\r\n            document.title = `${name} Leaderboard | Quizza`;\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        if(this.state.quiz) {\r\n          const {takenBy, name, created} = this.state.quiz;\r\n          const {name : creatorName} =   this.state.quizCreator;\r\n          return (\r\n            <div>\r\n                <h3>{name}</h3>\r\n                <h4>Created by {creatorName} at {new Date(created).toDateString()}</h4>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                           <td>Name</td>\r\n                            <td>Score</td> \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        takenBy\r\n                        .sort((a,b) => Number(b.score) - Number(a.score))\r\n                        .map(user => \r\n                            (<tr key={user._id}>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.score}</td>\r\n                            </tr>))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Quiz Not Found </h3>\r\n                <p>This quiz might have expired</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeaderBoard;","import React from 'react';\nimport  { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Nav from './Nav';\nimport Home from './Home';\nimport HowItWorks from './HowItWorks';\nimport QuizPage from './QuizPage';\nimport CreateQuiz from './CreteQuiz';\nimport LeaderBoard from './LeaderBoard';\nimport './App.css';\n\n\nconst NavRoute = ({exact, path, component: Component}) => (\n  <Route exact={exact} path={path} render={(props) => (\n    <div>\n      <Nav />\n      <Component {...props}/>\n    </div>\n  )}/>\n)\n\nfunction App() {\n  return (\n      <Router>\n        <Switch>\n            <NavRoute exact path='/' component={Home} />\n            <NavRoute path='/howitworks' component={HowItWorks} />\n            <NavRoute path='/createquiz' component={CreateQuiz} />\n            <Route exact path='/quiz/:quizId' component={QuizPage} />\n            <NavRoute path='/quiz/:quizId/leaderboard' component={LeaderBoard} />\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}